name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  notify-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Notify about pull request
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            --data-urlencode chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            --data-urlencode "text=üì• –ù–æ–≤–∏–π Pull Request: ${{ github.event.pull_request.title }}
üë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}
üîó https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run docker compose (tests/healthchecks)
        run: |
          docker compose -f docker-compose.yml up -d
          sleep 10
          docker compose ps

      - name: Notify failure (tests)
        if: failure()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            --data-urlencode chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            --data-urlencode "text=‚ùå –¢–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π—à–ª–∏ —É ${GITHUB_REF_NAME}
üîó https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

  deploy:
    if: github.ref == 'refs/heads/develop'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate required secrets
        run: |
          missing=0
          for v in KOYEB_API_KEY KOYEB_SERVICE_ID TELEGRAM_BOT_TOKEN TELEGRAM_CHAT_ID; do
            if [ -z "${{ secrets[format('{0}', v)] }}" ]; then
              echo "::error::Missing secret: $v"
              missing=1
            fi
          done
          [ $missing -eq 0 ] || exit 1

      - name: Trigger deploy on Koyeb (API)
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
          KOYEB_SERVICE_ID: ${{ secrets.KOYEB_SERVICE_ID }}
        run: |
          curl -fsS -X POST "https://app.koyeb.com/v1/services/${KOYEB_SERVICE_ID}/deployments" \
            -H "Authorization: Bearer ${KOYEB_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{}'

      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Wait for Koyeb deployment to be healthy
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
          KOYEB_SERVICE_ID: ${{ secrets.KOYEB_SERVICE_ID }}
          TIMEOUT: "900"
          SLEEP: "5"
        run: |
          set -euo pipefail
          echo "‚è≥ –û—á—ñ–∫—É—î–º–æ –Ω–∞ HEALTHY –¥–µ–ø–ª–æ–π —Å–µ—Ä–≤—ñ—Å—É ${KOYEB_SERVICE_ID}..."
          end=$((SECONDS + TIMEOUT))
          STATUS="UNKNOWN"
          while [ $SECONDS -lt $end ]; do
            RESP=$(curl -fsS \
              -H "Authorization: Bearer ${KOYEB_API_KEY}" \
              "https://app.koyeb.com/v1/deployments?service_id=${KOYEB_SERVICE_ID}&limit=1")

            STATUS=$(echo "$RESP" | jq -r '.deployments[0].status // .deployments[0].state // "UNKNOWN"' | tr '[:lower:]' '[:upper:]')
            DEPLOY_ID=$(echo "$RESP" | jq -r '.deployments[0].id // ""')
            echo "‚Ä¢ Deployment ${DEPLOY_ID:-N/A} —Å—Ç–∞—Ç—É—Å: ${STATUS}"

            case "$STATUS" in
              HEALTHY) exit 0 ;;
              ERROR|UNHEALTHY|STOPPED) exit 1 ;;
              *) sleep "$SLEEP" ;;
            esac
          done
          echo "‚è∞ –¢–∞–π–º–∞—É—Ç –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–µ–ø–ª–æ—é."
          exit 1

      - name: Notify success (deploy)
        if: success()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          MSG="Koyeb - troubled-paula/housescrm - Deployment is healthy."
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            --data-urlencode chat_id="${TELEGRAM_CHAT_ID}" \
            --data-urlencode "text=${MSG}
üîó https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

      - name: Notify failure (deploy)
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          MSG="üö® –î–µ–ø–ª–æ–π –ø—Ä–æ–≤–∞–ª–µ–Ω–æ —É ${GITHUB_REF_NAME} (STATUS: ${STATUS})"
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            --data-urlencode chat_id="${TELEGRAM_CHAT_ID}" \
            --data-urlencode "text=${MSG}
üîó https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
