name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  notify-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Notify about pull request
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="üì• –ù–æ–≤–∏–π Pull Request: ${{ github.event.pull_request.title }}
            üë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}
            üîó https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run docker compose (tests/healthchecks)
        run: |
          docker compose -f docker-compose.yml up -d
          sleep 10
          docker compose ps

      - name: Notify failure (tests)
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="‚ùå –¢–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π—à–ª–∏ —É *${{ github.ref_name }}*
            üîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  deploy:
    if: github.ref == 'refs/heads/develop'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Trigger deploy on Koyeb
        run: |
          curl -fsS -X POST https://app.koyeb.com/hook/deploy/${{ secrets.KOYEB_DEPLOY_HOOK }}

      - name: Install jq (for JSON parsing)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Wait for Koyeb deployment to be healthy
        env:
          KOYEB_API_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}
          KOYEB_SERVICE_ID: ${{ secrets.KOYEB_SERVICE_ID }}
          TIMEOUT: "600"   
          SLEEP: "5"       
        run: |
          set -euo pipefail

          echo "‚è≥ –û—á—ñ–∫—É—î–º–æ –Ω–∞ —É—Å–ø—ñ—à–Ω–∏–π –¥–µ–ø–ª–æ–π —Å–µ—Ä–≤—ñ—Å—É ${KOYEB_SERVICE_ID} —É Koyeb..."
          end=$((SECONDS + TIMEOUT))
          last_status="UNKNOWN"

          while [ $SECONDS -lt $end ]; do
            # –±–µ—Ä–µ–º–æ –Ω–∞–π—Å–≤—ñ–∂—ñ—à–∏–π –¥–µ–ø–ª–æ–π –¥–ª—è —Å–µ—Ä–≤—ñ—Å—É
            RESP=$(curl -fsS \
              -H "Authorization: Bearer ${KOYEB_API_TOKEN}" \
              "https://app.koyeb.com/v1/deployments?service_id=${KOYEB_SERVICE_ID}&limit=1")

            STATUS=$(echo "$RESP" | jq -r '.deployments[0].status // .deployments[0].state // "UNKNOWN"' | tr '[:lower:]' '[:upper:]')
            DEPLOY_ID=$(echo "$RESP" | jq -r '.deployments[0].id // ""')

            if [ -n "$DEPLOY_ID" ]; then
              echo "‚Ä¢ Deployment ${DEPLOY_ID} —Å—Ç–∞—Ç—É—Å: ${STATUS}"
            else
              echo "‚Ä¢ –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö –¥–µ–ø–ª–æ—ó–≤, —á–µ–∫–∞—î–º–æ..."
            fi

            case "$STATUS" in
              HEALTHY)
                echo "‚úÖ –î–µ–ø–ª–æ–π HEALTHY."
                exit 0
                ;;
              ERROR|UNHEALTHY|STOPPED)
                echo "üö® –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º: ${STATUS}"
                exit 1
                ;;
              *)
                sleep "$SLEEP"
                ;;
            esac
          done

          echo "‚è∞ –¢–∞–π–º–∞—É—Ç –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–µ–ø–ª–æ—é –≤ Koyeb."
          exit 1

      - name: Notify success (deploy)
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="‚úÖ *–î–µ–ø–ª–æ–π —É—Å–ø—ñ—à–Ω–∏–π* —É *${{ github.ref_name }}*
            üîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Notify failure (deploy)
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="üö® *–î–µ–ø–ª–æ–π –ø—Ä–æ–≤–∞–ª–µ–Ω–æ* —É *${{ github.ref_name }}*
            üîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
