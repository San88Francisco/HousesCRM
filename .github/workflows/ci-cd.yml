name: CI/CD Pipeline

on:
  pull_request:
    types: [opened, closed]
  push:
    branches:
      - develop
      - main

jobs:

  notify-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Notify about new PR
        if: github.event.action == 'opened'
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üì• –ù–æ–≤–∏–π Pull Request: ${{ github.event.pull_request.title }}\nüë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}\nüîó https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"

      - name: Notify about merged PR into develop/main
        if: github.event.action == 'closed' && github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'develop' || github.event.pull_request.base.ref == 'main')
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ Pull Request –∑–º–µ—Ä–¥–∂–µ–Ω–æ —É *${{ github.event.pull_request.base.ref }}*: ${{ github.event.pull_request.title }}\nüîó https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"

  deploy:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deploy on Koyeb
        id: trigger_deploy
        run: |
          response=$(curl -s -X POST https://app.koyeb.com/hook/deploy/${{ secrets.KOYEB_DEPLOY_HOOK }})
          echo "response=$response"
          # –ü—Ä–∏–∫–ª–∞–¥: –¥—ñ—Å—Ç–∞–Ω—å deploy_id –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, –∞–¥–∞–ø—Ç—É–π –ø—ñ–¥ —Å–≤—ñ–π API
          deploy_id=$(echo $response | jq -r '.deploy_id')
          echo "deploy_id=$deploy_id"
          echo "::set-output name=deploy_id::$deploy_id"

      - name: Wait for deploy to complete
        id: wait_deploy
        run: |
          deploy_id=${{ steps.trigger_deploy.outputs.deploy_id }}
          max_attempts=20
          attempt=0
          while [ $attempt -lt $max_attempts ]; do
            status_response=$(curl -s "https://api.koyeb.com/deployments/$deploy_id/status" -H "Authorization: Bearer ${{ secrets.KOYEB_API_TOKEN }}")
            status=$(echo "$status_response" | jq -r '.status')
            echo "Attempt $attempt: status = $status"
            if [ "$status" == "successful" ]; then
              echo "Deploy successful!"
              exit 0
            elif [ "$status" == "failed" ]; then
              echo "Deploy failed!"
              exit 1
            fi
            attempt=$((attempt+1))
            sleep 15
          done
          echo "Timed out waiting for deploy status"
          exit 1

      - name: Notify success (deploy)
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ *–î–µ–ø–ª–æ–π —É—Å–ø—ñ—à–Ω–∏–π* —É *${{ github.ref_name }}*\nüîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Notify failure (deploy)
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üö® *–î–µ–ø–ª–æ–π –ø—Ä–æ–≤–∞–ª–µ–Ω–æ* —É *${{ github.ref_name }}*\nüîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
