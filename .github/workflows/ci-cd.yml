  deploy:
    if: github.ref == 'refs/heads/develop'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl ca-certificates

      # 1) –¢—Ä–∏–≥–µ—Ä–∏–º–æ redeploy —á–µ—Ä–µ–∑ REST
      - name: Trigger redeploy (Koyeb REST)
        env:
          KOYEB_API_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}
          KOYEB_SERVICE_ID: ${{ secrets.KOYEB_SERVICE_ID }}
        run: |
          set -euo pipefail
          curl -sS -X POST \
            -H "Authorization: Bearer $KOYEB_API_TOKEN" \
            -H "Content-Type: application/json" \
            "https://app.koyeb.com/v1/services/$KOYEB_SERVICE_ID/redeploy" \
            -o /tmp/redeploy.json
          echo "Redeploy triggered."

      # 2) –û–ø–∏—Ç—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –¥–µ–ø–ª–æ–π —Å–µ—Ä–≤—ñ—Å—É, —á–µ–∫–∞—î–º–æ HEALTHY
      - name: Wait for deployment to be HEALTHY (Koyeb REST)
        env:
          KOYEB_API_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}
          KOYEB_SERVICE_ID: ${{ secrets.KOYEB_SERVICE_ID }}
          TIMEOUT_SECONDS: "900"   # 15 —Ö–≤
          SLEEP_SECONDS: "10"
        shell: bash
        run: |
          set -euo pipefail

          start_ts=$(date +%s)
          echo "‚è≥ –û—á—ñ–∫—É—î–º–æ HEALTHY‚Ä¶"

          while true; do
            # –ë–µ—Ä–µ–º–æ –Ω–∞–π—Å–≤—ñ–∂—ñ—à–∏–π –¥–µ–ø–ª–æ–π —Ü—å–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É —Ç–∞ —á–∏—Ç–∞—î–º–æ –π–æ–≥–æ —Å—Ç–∞—Ç—É—Å
            DEPLOY_JSON="$(curl -sS \
              -H "Authorization: Bearer $KOYEB_API_TOKEN" \
              "https://app.koyeb.com/v1/deployments?service_id=$KOYEB_SERVICE_ID&page_size=1")"

            STATUS="$(echo "$DEPLOY_JSON" | jq -r '.deployments[0].status')"
            echo "–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å: ${STATUS}"

            if [[ "${STATUS}" == "HEALTHY" ]]; then
              echo "‚úÖ Deployment is healthy."
              break
            fi

            if [[ "${STATUS}" == "UNHEALTHY" || "${STATUS}" == "FAILED" || "${STATUS}" == "ERROR" ]]; then
              echo "‚ùå Deployment status: ${STATUS}"
              exit 1
            fi

            now_ts=$(date +%s)
            if (( now_ts - start_ts > TIMEOUT_SECONDS )); then
              echo "‚è±Ô∏è –¢–∞–π–º–∞—É—Ç –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–µ–ø–ª–æ—é."
              exit 1
            fi

            sleep "${SLEEP_SECONDS}"
          done

      - name: Notify success (deploy)
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ *–î–µ–ø–ª–æ–π —É—Å–ø—ñ—à–Ω–∏–π* —É *${{ github.ref_name }}* üîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Notify failure (deploy)
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="üö® *–î–µ–ø–ª–æ–π –ø—Ä–æ–≤–∞–ª–µ–Ω–æ* —É *${{ github.ref_name }}* üîó https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
