const { getDB } = require('../../config/db');
const { ObjectId } = require('mongodb');

// üè† –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—É–¥–∏–Ω–∫—É
const createHouse = async (req, res) => {
  const newHouse = {
    startDate: req.body.startDate,
    finishDate: req.body.finishDate,
    price: req.body.price,
  };

  try {
    const db = getDB();
    const result = await db.collection('house_boss').insertOne(newHouse);
    console.log('–í—Å—Ç–∞–≤–ª–µ–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç:', result.insertedId);
    res.json({ message: '–ë—É–¥–∏–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ', house: newHouse });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ.' });
  }
};

// üìã –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –±—É–¥–∏–Ω–∫–∏
const getHouses = async (req, res) => {
  try {
    const db = getDB();
    const houses = await db.collection('house_boss').find().toArray();
    res.json(houses);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ.' });
  }
};

// ‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è –±—É–¥–∏–Ω–∫—É –∑–∞ ID
const deleteHouse = async (req, res) => {
  const houseId = req.params.id;

  try {
    const db = getDB();
    const result = await db.collection('house_boss').deleteOne({ _id: new ObjectId(houseId) });

    if (result.deletedCount === 0) {
      return res.status(404).json({ message: '–ë—É–¥–∏–Ω–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' });
    }

    res.json({ message: '–ë—É–¥–∏–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ' });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –±—É–¥–∏–Ω–æ–∫.' });
  }
};

// üîÑ –ß–∞—Å—Ç–∫–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±—É–¥–∏–Ω–∫—É –∑–∞ ID (PATCH)
const updateHouse = async (req, res) => {
  const houseId = req.params.id;
  const updateFields = req.body;

  try {
    const db = getDB();
    const result = await db.collection('house_boss').updateOne(
      { _id: new ObjectId(houseId) },
      { $set: updateFields }
    );

    if (result.matchedCount === 0) {
      return res.status(404).json({ message: '–ë—É–¥–∏–Ω–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' });
    }

    res.json({ message: '–ë—É–¥–∏–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ' });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –±—É–¥–∏–Ω–æ–∫.' });
  }
};

module.exports = { createHouse, getHouses, deleteHouse, updateHouse };
